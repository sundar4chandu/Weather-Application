# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: npm install
  displayName: 'Install Dependencies'

- script: npx ng build --prod
  displayName: 'Build'

- script: npx ng test --watch=false --codeCoverage=true
  displayName: 'Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TESTS-*.xml'
  displayName: 'Publish Test Results'

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'coverage/weather-app/cobertura-coverage.xml'
  displayName: 'Publish Code Coverage Results'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'dist/weather-app'
    ArtifactName: 'weather-app'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'

- task: OctopusPack@4
  inputs:
    PackageId: 'Weather.App'
    PackageFormat: 'Zip'
    PackageVersion: '0.0.1'
    SourcePath: 'dist/weather-app'
    OutputPath: 'packages'

- task: OctopusPush@4
  inputs:
    OctoConnectedServiceName: 'Octopus Deploy'
    Space: 'Spaces-1'
    Package: 'packages/*.zip'
    Replace: 'true'

# - task: OctopusCreateRelease@4
#   inputs:
#     OctoConnectedServiceName: 'Octopus Deploy'
#     Space: 'Spaces-1'
#     ProjectName: 'Projects-1'
#     DeployToEnvironment: 'Environments-1'
#     DeploymentProgress: true

# - task: OctopusDeployRelease@4
#   inputs:
#     OctoConnectedServiceName: 'Octopus Deploy'
#     Space: 'Spaces-1'
#     Project: 'Projects-1'
#     ReleaseNumber: 'latest'
#     Environments: 'Environments-1'
#     ShowProgress: true

